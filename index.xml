<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flobot Documentation</title>
    <link>https://wmfs.github.io/index.xml</link>
    <description>Recent content on Flobot Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>MIT</copyright>
    <lastBuildDate>Wed, 09 Mar 2016 00:11:02 +0100</lastBuildDate>
    <atom:link href="https://wmfs.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Key Concepts</title>
      <link>https://wmfs.github.io/key-concepts/</link>
      <pubDate>Wed, 09 Mar 2016 00:11:02 +0100</pubDate>
      
      <guid>https://wmfs.github.io/key-concepts/</guid>
      <description>

&lt;h2 id=&#34;flows&#34;&gt;Flows&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Everything in Flobot is built around flows: definitions of real-world business processes.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An organisation is likely to contain hundreds of business processes, of all shapes-and-sizes. Flows can underpin something as simple as searching for a document through to complex multi-team undertakings.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Flows may involve people from multiple teams or require no human input at all. It&amp;rsquo;s likely an employee&amp;rsquo;s role will require interaction with several flows - but probably not all of them.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Flows play nicely with industry representations such as &lt;a href=&#34;https://en.wikipedia.org/wiki/State_diagram&#34;&gt;State Diagrams&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Activity_diagram&#34;&gt;Activity Diagrams&lt;/a&gt; and &lt;a href=&#34;http://www.bpmn.org/&#34;&gt;Business Process Diagrams&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;the-booking-someone-sick-flow&#34;&gt;The booking-someone-sick flow&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://wmfs.github.io/images/simple-flow.png&#34; alt=&#34;Simple state diagram for booking-someone-sick&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In the diagram above, the operator has been granted access to this particular flow and can &lt;em&gt;instigate&lt;/em&gt; it&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The &lt;em&gt;initial&lt;/em&gt; step is for the operator to complete a form containing all the details of the sickness.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Once the form has been completed, an email is sent to the employee&amp;rsquo;s manager containing a summary about the absence.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;What happens next is dependent on whether the absence will reduce staffing below some critical level. Either things are fine and the flow can move to the final step or the Operations Room will be alerted to the staffing shortfall.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;And to finish, the employee will have a new entry added to their sickness record.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&#34;states&#34;&gt;States&lt;/h2&gt;

&lt;p&gt;Each of the circles in the previous diagram are known as &lt;strong&gt;States&lt;/strong&gt;.  More accurately, a Flobot flow contains all the necessary information to assemble a &lt;a href=&#34;https://en.wikipedia.org/wiki/State_diagram&#34;&gt;Finite State Machine&lt;/a&gt; (&lt;strong&gt;FSM&lt;/strong&gt;), that being:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A list of possible states (an FSM can be in exactly one of a finite number of states at any given time)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;How states are connected together (along with any conditions that are required)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Which is the &lt;em&gt;initial&lt;/em&gt; state (i.e. the state that is active when things first start)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flobot offers a pool of different &lt;strong&gt;State Classes&lt;/strong&gt; from which flows can be constructed. It&amp;rsquo;s possible to deliver a good chunk of back-office functionality with surprisingly few state classes.&lt;/p&gt;

&lt;p&gt;For example, the state classes below should be enough to model large swathes of organisational data collection:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For a full list of states that are currently available out-of-the-box, please see the &lt;a href=&#34;https://wmfs.github.io/core-components/#list-of-state-classes&#34;&gt;list of core states&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;flobots&#34;&gt;Flobots&lt;/h2&gt;

&lt;p&gt;At this point it &lt;em&gt;might&lt;/em&gt;  be useful to think of things in terms of a railway network&amp;hellip;&lt;/p&gt;

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Analogy alert!&lt;/p&gt;
&lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Flows&lt;/strong&gt; can be seen as the railway track - connecting states together in a very controlled way&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;States&lt;/strong&gt; can be seen as the railway stations - they&amp;rsquo;re reached by travelling around flows. Journeys start at the &lt;em&gt;initial&lt;/em&gt; state.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Flobots&lt;/strong&gt; therefore can be seen as individual trains as they transition from state-to-state. A single flow can have any number of Flobots making their way around it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Flobots are always persisted as a simple document so that they can survive server restarts.
This is an example of what might be persisted for a Flobot travelling around the &lt;strong&gt;booking-someone-sick&lt;/strong&gt; flow from earlier:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-JSON&#34;&gt;{ 
    &amp;quot;_id&amp;quot; : &amp;quot;586e42ade923c119c4a4a85b&amp;quot;, 
    &amp;quot;createdAt&amp;quot; : &amp;quot;2017-01-05T12:57:17.701+0000&amp;quot;,
    &amp;quot;userId&amp;quot; : &amp;quot;john.doe@flobotjs.io&amp;quot;, 
    &amp;quot;status&amp;quot; : &amp;quot;running&amp;quot;, 
    &amp;quot;flowId&amp;quot; : &amp;quot;booking-someone-sick&amp;quot;, 
    &amp;quot;stateId&amp;quot; : &amp;quot;notifyingOperationsRoom&amp;quot;, 
    &amp;quot;stateEnterTime&amp;quot; : &amp;quot;2017-01-05T12:57:17.686+0000&amp;quot;, 
    &amp;quot;ctx&amp;quot; : {
        &amp;quot;formData&amp;quot; : {
            &amp;quot;employeeNumber&amp;quot;: 372711,
            &amp;quot;likelyReturnDate&amp;quot;: &amp;quot;2017-01-07T09:00:00.000+0000&amp;quot;,
            &amp;quot;sicknessCode&amp;quot;: &amp;quot;hangover&amp;quot;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The various properties in this example document are described in the table below:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;_id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Uniquely identifies a Flobot&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;createdAt&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;When the Flobot was first instigated&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;userId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;If the Flobot was instigated by a human, then this is the userId of that person&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;status&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Always one of &lt;code&gt;starting&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;waitingForHumanInput&lt;/code&gt; or &lt;code&gt;finished&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;flowId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Identifies which flow this Flobot is travelling around&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stateId&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Indicates the state that this Flobot is currently in&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stateEnterTime&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The timestamp of when the Flobot entered its current state&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ctx&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This is a simple key/value store that&amp;rsquo;s unique to each Flobot. In analogy terms, a good place to store the number of passengers on this particular train. This &lt;strong&gt;context&lt;/strong&gt; is available to all states to read-from/write-to as they require. In this way, inter-state communication is possible - but within context of each &lt;del&gt;train&lt;/del&gt; Flobot.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;hr&gt;

&lt;h2 id=&#34;blueprints&#34;&gt;Blueprints&lt;/h2&gt;

&lt;p&gt;On their own, flow definitions aren&amp;rsquo;t enough&amp;hellip; for everything to spark, states need to be fed things like data models, form layouts, images, custom logic, templates etc.
This is where Flobot &lt;strong&gt;Blueprints&lt;/strong&gt; come in. The actual content of a Blueprint is beyond the scope of this article, but just to say Blueprints themselves are nothing special, just a simple folder structure:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Directory&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/flows&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Flow definitions defined in JSON files&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/functions&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;One file per Node.js module (which should export a single function).&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/registryKeys&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A collection of JSON files which are used to create entries in the Flobot registry.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/models&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;One JSON file per model (contents to be a JSON schema for defining the model&amp;#39;s data structure)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/tags&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;JSON files providing &amp;#39;tags&amp;#39; which are used throughout Flobot to help categorise things and aid discovery&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/images&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A place to put images that can be served-up in Forms and similar&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;/forms&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;One JSON file per Form (currently need to be in &lt;a href=&#34;http://schemaform.io/&#34;&gt;Schemaform&lt;/a&gt; format)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Given an organisation could potentially attract hundreds of flows, blueprints can logically group together related flows (perhaps into teams or functional areas) to help make things more manageable.
Blueprints also help with versioning, collaboration (on Github or similar) and interoperability.&lt;/p&gt;

&lt;p&gt;The Flobot framework can load any number of blueprints at startup, potentially serving all back-office functionality from a single server.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&#34;plugins&#34;&gt;Plugins&lt;/h2&gt;

&lt;p&gt;Flobot takes a batteries-included approach and hopefully ships with enough &lt;a href=&#34;#states&#34;&gt;State Classes&lt;/a&gt; to cover-off most of the the duller business processes out there. To help try and keep things minimal and manageable Flobot employs a &lt;strong&gt;plugin&lt;/strong&gt; architecture.
A Flobot plugin extends the core framework with related State Classes (along with other internal components required to run them).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Please see the &lt;a href=&#34;https://wmfs.github.io/core-components/#list-of-plugins&#34;&gt;list of core plugins&lt;/a&gt; to get a feel for what plugins are all about&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Flobot&amp;rsquo;s current library of state classes is certainly far from exhaustive and organisations will undoubtedly have specialist requirements of their own.
It&amp;rsquo;s straightforward to write new plugins for Flobot to add missing capabilities.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>https://wmfs.github.io/getting-started/</link>
      <pubDate>Wed, 09 Mar 2016 00:11:02 +0100</pubDate>
      
      <guid>https://wmfs.github.io/getting-started/</guid>
      <description>

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;First ensure you have &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt; installed&amp;hellip; Flobot requires at least &lt;code&gt;v6.9 LTS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Flobot itself can then be downloaded via &lt;code&gt;npm&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install flobot --save
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Core Components</title>
      <link>https://wmfs.github.io/core-components/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/</guid>
      <description>

&lt;p&gt;This page contains an inventory of all the main types of component supplied via the Flobot module and core plugins:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wmfs.github.io/images/components.png&#34; alt=&#34;Diagram showing how plugins/blueprints/config/services relate to each other&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;contents&#34;&gt;Contents&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#list-of-plugins&#34;&gt;List of plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#list-of-state-classes&#34;&gt;List of States Classes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#list-of-commands&#34;&gt;List of commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#list-of-services&#34;&gt;List of services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;list-of-plugins&#34;&gt;List of plugins&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Plugin&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt;flobot&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The &lt;a href=&#34;https://github.com/wmfs/flobot&#34;&gt;flobot&lt;/a&gt; module has a &lt;a href=&#34;https://github.com/wmfs/flobot/lib/plugin&#34;&gt;built-in plugin&lt;/a&gt; which provides low-level components to help get things started.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-alerts-plugin#readme&#34;&gt;alerts&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds some alerting options to the Flobot framework&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-elasticsearch-plugin#readme&#34;&gt;elasticsearch&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds an Elasticsearch-based search service to the Flobot framework&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-express-plugin#readme&#34;&gt;express&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Exposes the Flobot framework via an Express.js web app.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-forms-plugin#readme&#34;&gt;forms&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds some form capabilities to Flobot&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-import-plugin#readme&#34;&gt;import&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;For extracting data from files and loading into Flobot storage&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-mongodb-plugin#readme&#34;&gt;mongodb&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Replace Flobot&amp;#39;s out-the-box memory storage with MongoDB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;list-of-state-classes&#34;&gt;List of State Classes&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;State Class&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Plugin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/elasticsearch-deleting-from-search-index&#34;&gt;deletingFromSearchIndex&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Removes a document from an Elasticsearch index&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-elasticsearch-plugin#readme&#34;&gt; elasticsearch&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/flobot-finding-one&#34;&gt;findingOne&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Fetches a single document from storage and adds to a Flobot context&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/forms-form-filling&#34;&gt;formFilling&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Indicates which form a human needs to interact with - and waits until a response is received&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-forms-plugin#readme&#34;&gt; forms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/import-importing&#34;&gt;importing&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Streams data from a pre-prepared directory and into storage&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-import-plugin#readme&#34;&gt; import&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/flobot-persisting&#34;&gt;persisting&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Saves a document to storage&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/import-producing-import-files&#34;&gt;producingImportFiles&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Takes data from raw files (e.g. CSV) and outputs a common structure for subsequent &lt;strong&gt;importing&lt;/strong&gt;.&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-import-plugin#readme&#34;&gt; import&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/elasticsearch-searching&#34;&gt;searching&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Runs a query on an Elasticsearch index&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-elasticsearch-plugin#readme&#34;&gt; elasticsearch&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/alerts-sending-email&#34;&gt;sendingEmail&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;For sending an emails - just a thin wrapper over &lt;a href=&#34;https://nodemailer.com/&#34;&gt;Nodemailer&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-alerts-plugin#readme&#34;&gt; alerts&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/elasticsearch-setting-search-index&#34;&gt;settingSearchIndex&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Indexes an Elasticsearch document&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-elasticsearch-plugin#readme&#34;&gt; elasticsearch&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;states/flobot-starting&#34;&gt;starting&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An internal (automatically added) state that performs some Flobot-startup tasks&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;list-of-commands&#34;&gt;List of commands&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Plugin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;commands/flobot-env&#34;&gt;env&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Allows a state to refer to an environment variable&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;commands/flobot-sprintf&#34;&gt;sprintf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Derive a runtime value using a &lt;a href=&#34;https://github.com/alexei/sprintf.js&#34;&gt;sprintf&lt;/a&gt; string template&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;commands/flobot-value&#34;&gt;value&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Get a value from the Flobot&amp;#39;s context&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;list-of-services&#34;&gt;List of services&lt;/h2&gt;

&lt;div class=&#34;admonition warning&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Advanced&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re not going to be writing your own Flobot plugins, you can probably give this section a miss for now.&lt;/p&gt;
&lt;/div&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Service&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Plugin&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/express-auth&#34;&gt;auth&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Provides JWT-based authentication capabilities&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-express-plugin#readme&#34;&gt; express&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-blueprint-docs&#34;&gt;blueprintDocs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Allows tracking of documents created via blueprints, so they don&amp;#39;t get reverted when Flobot restarts&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-caches&#34;&gt;caches&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds &lt;a href=&#34;https://www.npmjs.com/package/lru-cache&#34;&gt;lru-cache&lt;/a&gt;-based caching to Flobot. Note defaults will be used if no &lt;code&gt;caches&lt;/code&gt; configuration is provided.&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-commands&#34;&gt;commands&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Service to support blueprint commands&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/alerts-email&#34;&gt;email&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Integrates Flobot with &lt;a href=&#34;https://nodemailer.com/&#34;&gt;Nodemailer&lt;/a&gt; to offer email-sending capabilities&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-alerts-plugin#readme&#34;&gt; alerts&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-expression&#34;&gt;expression&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Provides safe, &lt;a href=&#34;https://www.npmjs.com/package/esprima&#34;&gt;Esprima&lt;/a&gt;-based expression evaluation&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/express-flobot-rest&#34;&gt;flobotRest&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Exposes the core Flobot abilities (start, get, update and cancel) over a JWT-secured REST API&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-express-plugin#readme&#34;&gt; express&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-flobots&#34;&gt;flobots&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Creates Finite State Machines based on flow definitions and an API to interact with Flobots&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/forms-forms&#34;&gt;forms&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Exposes UI configuration (as supplied via blueprints in &lt;a href=&#34;http://schemaform.io/&#34;&gt;Schema Form&lt;/a&gt; format)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-forms-plugin#readme&#34;&gt; forms&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-functions&#34;&gt;functions&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds ability to run custom logic as defined in a blueprint&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-inventory&#34;&gt;inventory&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Collates component information by scanning plugins. The results can then be used by tooling and documentation-generators&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/express-rbac&#34;&gt;rbac&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Provides JWT-based authentication capabilities&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-express-plugin#readme&#34;&gt; express&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-registry&#34;&gt;registry&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Provides a mechanism for states to refer to site-specific values&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/elasticsearch-search&#34;&gt;search&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;For integrating Flobot with an Elasticsearch server&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-elasticsearch-plugin#readme&#34;&gt; elasticsearch&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/express-server&#34;&gt;server&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Provides a CORS-enabled Express.js server. Includes serving of static assets as supplied via Bluepints&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-express-plugin#readme&#34;&gt; express&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-states&#34;&gt;states&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Stores and prepares State Classes, ahead of generating flows&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-storage&#34;&gt;storage&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This is the default in-memory storage service that ships with Flobot. Useful for testing and not much else.&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/mongodb-storage&#34;&gt;storage&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Replaces the default in-memory storage solution with a MongoDB-backed alternative&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-mongodb-plugin#readme&#34;&gt; mongodb&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-tags&#34;&gt;tags&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Provides a generic mechanism to help tag/classify search results, tasks, forms etc.&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/flobot-temp&#34;&gt;temp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Helps configure and manage a temporary folder for Flobot to use&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt; flobot&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;services/express-users&#34;&gt;users&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds user-management capabilities to Flobot (e.g. authorization checks, what flows/forms a user is entitled to instigate etc.)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/wmfs/flobot-express-plugin#readme&#34;&gt; express&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://wmfs.github.io/license/</link>
      <pubDate>Wed, 09 Mar 2016 20:10:46 +0100</pubDate>
      
      <guid>https://wmfs.github.io/license/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;The MIT License (MIT)&lt;/p&gt;

&lt;p&gt;Copyright &amp;copy; 2017 West Midlands Fire Service&lt;/p&gt;

&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;

&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;

&lt;p&gt;THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>deletingFromSearchIndex state</title>
      <link>https://wmfs.github.io/core-components/states/elasticsearch-deleting-from-search-index/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/elasticsearch-deleting-from-search-index/</guid>
      <description>

&lt;p&gt;Removes a document from an Elasticsearch index. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot-elasticsearch-plugin#readme&#34;&gt;elasticsearch&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;deletingFromSearchIndex&amp;quot;: {
    &amp;quot;options&amp;quot;: {
      &amp;quot;docName&amp;quot;: &amp;quot;cat&amp;quot;,
      &amp;quot;keyPaths&amp;quot;: {
        &amp;quot;name&amp;quot;: &amp;quot;catDocKey.name&amp;quot;
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;docName&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Used to resolve the name of an Elasticsearch type where the document to be deleted will be found (type names are derived as [namespace]_[docName]).&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;keyPaths&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Used to derive the id of the document to delete. Provide key/value pairs&amp;hellip; the key will be ignored (for now), but the value should be a &amp;#39;.&amp;#39; delimited path pointing to a value on the Flobot context. These context-values will be joined with &amp;#39;_&amp;#39; to form a unique identifier to delete.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This state will automatically advance the flow and doesn&amp;rsquo;t require any external updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>findingOne state</title>
      <link>https://wmfs.github.io/core-components/states/flobot-finding-one/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/flobot-finding-one/</guid>
      <description>

&lt;p&gt;Fetches a single document from storage and adds to a Flobot context. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt;flobot&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;findingOne&amp;quot;: {
    &amp;quot;options&amp;quot;: {
      &amp;quot;modelId&amp;quot;: &amp;quot;cat&amp;quot;,
      &amp;quot;target&amp;quot;: &amp;quot;catDocFromStorage&amp;quot;,
      &amp;quot;where&amp;quot;: {
        &amp;quot;name&amp;quot;: {
          &amp;quot;$value&amp;quot;: {
            &amp;quot;path&amp;quot;: &amp;quot;catDocFromParams.name&amp;quot;
          }
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;modelId&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This is the id of a model within the current namespace from which a single document will be fetched.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;target&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This is a &amp;#39;.&amp;#39; delimited path of where the fetched document should be set on the Flobot context.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;select&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Limits the fields (using a &lt;a href=&#34;http://mongoosejs.com/docs/queries.html&#34;&gt;Mongoose&lt;/a&gt;-style syntax) that are returned. Defaults to &lt;code&gt;-_id -__v -createdAt -updatedAt&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;where&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A MongoDB-style query object to define which document to find (for more information see &lt;a href=&#34;https://docs.mongodb.com/manual/tutorial/query-documents/#specify-query-filter-conditions&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/davidgtonge/underscore-query&#34;&gt;here&lt;/a&gt;). Use &lt;strong&gt;commands&lt;/strong&gt; such as &lt;code&gt;$value&lt;/code&gt; to dynamically access values on the Flobot context.&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This state will automatically advance the flow and doesn&amp;rsquo;t require any external updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>formFilling state</title>
      <link>https://wmfs.github.io/core-components/states/forms-form-filling/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/forms-form-filling/</guid>
      <description>

&lt;p&gt;Indicates which form a human needs to interact with - and waits until a response is received. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot-forms-plugin#readme&#34;&gt;forms&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;formFilling&amp;quot;: {
    &amp;quot;options&amp;quot;: {
      &amp;quot;formId&amp;quot;: &amp;quot;catEditingForm&amp;quot;,
      &amp;quot;target&amp;quot;: &amp;quot;catData&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;formId&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The id of a form in the current namespace that a human needs to interact with&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;target&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A &amp;#39;.&amp;#39; delimited path to where data that&amp;#39;s submitted via the form should be set on the Flobot context&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;false&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This state will require an external update before flow will advance&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>importing state</title>
      <link>https://wmfs.github.io/core-components/states/import-importing/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/import-importing/</guid>
      <description>

&lt;p&gt;Streams data from a pre-prepared directory and into storage. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot-import-plugin#readme&#34;&gt;import&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;importing&amp;quot;: {
    &amp;quot;options&amp;quot;: {
      &amp;quot;importFrom&amp;quot;: {
        &amp;quot;$value&amp;quot;: {
          &amp;quot;path&amp;quot;: &amp;quot;importInfo.outputDir&amp;quot;
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;importFrom&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A path indicating where to find the processed import directory (which is available via the &lt;code&gt;producing-import-files&lt;/code&gt; state)&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This state will automatically advance the flow and doesn&amp;rsquo;t require any external updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>persisting state</title>
      <link>https://wmfs.github.io/core-components/states/flobot-persisting/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/flobot-persisting/</guid>
      <description>

&lt;p&gt;Saves a document to storage. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt;flobot&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;persisting&amp;quot;: {
    &amp;quot;options&amp;quot;: {
      &amp;quot;modelId&amp;quot;: &amp;quot;cat&amp;quot;,
      &amp;quot;doc&amp;quot;: {
        &amp;quot;$value&amp;quot;: {
          &amp;quot;path&amp;quot;: &amp;quot;catDocFromParams&amp;quot;
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;modelId&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;This is the id of a model within the current namespace which will be used to persist the document.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;doc&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The document that needs storing. Use &lt;strong&gt;commands&lt;/strong&gt; such as &lt;code&gt;$value&lt;/code&gt; and similar to dynamically access Flobot context&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This state will automatically advance the flow and doesn&amp;rsquo;t require any external updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>producingImportFiles state</title>
      <link>https://wmfs.github.io/core-components/states/import-producing-import-files/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/import-producing-import-files/</guid>
      <description>

&lt;p&gt;Takes data from raw files (e.g. CSV) and outputs a common structure for subsequent &lt;strong&gt;importing&lt;/strong&gt;. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot-import-plugin#readme&#34;&gt;import&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;producingImportFiles&amp;quot;: {
    &amp;quot;options&amp;quot;: {
      &amp;quot;parserName&amp;quot;: &amp;quot;csv&amp;quot;,
      &amp;quot;parserOptions&amp;quot;: {
        &amp;quot;quote&amp;quot;: &amp;quot;\&amp;quot;&amp;quot;,
        &amp;quot;delimiter&amp;quot;: &amp;quot;,&amp;quot;,
        &amp;quot;newline&amp;quot;: &amp;quot;\n&amp;quot;,
        &amp;quot;skipFirstLine&amp;quot;: true,
        &amp;quot;trimWhitespace&amp;quot;: true
      },
      &amp;quot;targetModels&amp;quot;: [
        {
          &amp;quot;modelId&amp;quot;: &amp;quot;planet&amp;quot;,
          &amp;quot;fieldSources&amp;quot;: {
            &amp;quot;planetName&amp;quot;: {
              &amp;quot;source&amp;quot;: &amp;quot;csvIndex&amp;quot;,
              &amp;quot;options&amp;quot;: {
                &amp;quot;index&amp;quot;: 0
              }
            },
            &amp;quot;title&amp;quot;: {
              &amp;quot;source&amp;quot;: &amp;quot;csvIndex&amp;quot;,
              &amp;quot;options&amp;quot;: {
                &amp;quot;index&amp;quot;: 1
              }
            },
            &amp;quot;radiusKm&amp;quot;: {
              &amp;quot;source&amp;quot;: &amp;quot;csvIndex&amp;quot;,
              &amp;quot;options&amp;quot;: {
                &amp;quot;index&amp;quot;: 2
              }
            },
            &amp;quot;radiusMiles&amp;quot;: {
              &amp;quot;source&amp;quot;: &amp;quot;function&amp;quot;,
              &amp;quot;options&amp;quot;: {
                &amp;quot;functionName&amp;quot;: &amp;quot;mileMaker&amp;quot;
              }
            }
          }
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;parserName&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Name of the parser to process the raw source files. Currently only &lt;code&gt;csv&lt;/code&gt; is supported.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;parserOptions&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Parser-specific options&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;targetModels&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;array&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;For defining how raw data should be stored in models&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This state will automatically advance the flow and doesn&amp;rsquo;t require any external updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>searching state</title>
      <link>https://wmfs.github.io/core-components/states/elasticsearch-searching/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/elasticsearch-searching/</guid>
      <description>

&lt;p&gt;Runs a query on an Elasticsearch index. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot-elasticsearch-plugin#readme&#34;&gt;elasticsearch&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This state doesn&amp;rsquo;t require any configuration.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This state will automatically advance the flow and doesn&amp;rsquo;t require any external updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>sendingEmail state</title>
      <link>https://wmfs.github.io/core-components/states/alerts-sending-email/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/alerts-sending-email/</guid>
      <description>

&lt;p&gt;For sending an emails - just a thin wrapper over &lt;a href=&#34;https://nodemailer.com/&#34;&gt;Nodemailer&lt;/a&gt;. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot-alerts-plugin#readme&#34;&gt;alerts&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;sendingEmail&amp;quot;: {
    &amp;quot;options&amp;quot;: {
      &amp;quot;to&amp;quot;: {
        &amp;quot;$env&amp;quot;: {
          &amp;quot;variableName&amp;quot;: &amp;quot;FLOBOT_WELCOME_RECIPIENTS&amp;quot;,
          &amp;quot;failIfNotSet&amp;quot;: true
        }
      },
      &amp;quot;subject&amp;quot;: &amp;quot;Welcome to Flobot!&amp;quot;,
      &amp;quot;text&amp;quot;: &amp;quot;Congratulations... you are now part of the wonderful world of Flobot! &amp;lt;3&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;to&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Comma separated list or an array of recipients e-mail addresses that will appear on the To: field&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;cc&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Comma separated list or an array of recipients e-mail addresses that will appear on the Cc: field&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;bcc&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Comma separated list or an array of recipients e-mail addresses that will appear on the Bcc: field&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;subject&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The subject of the e-mail&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;text&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The plaintext version of the message as an Unicode string, Buffer, Stream or an attachment-like object ({path: &amp;#39;/var/data/&amp;hellip;&amp;#39;})&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;html&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The HTML version of the message as an Unicode string, Buffer, Stream or an attachment-like object ({path: &amp;#39;http://&amp;hellip;&amp;#39;})&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This state will automatically advance the flow and doesn&amp;rsquo;t require any external updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>settingSearchIndex state</title>
      <link>https://wmfs.github.io/core-components/states/elasticsearch-setting-search-index/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/elasticsearch-setting-search-index/</guid>
      <description>

&lt;p&gt;Indexes an Elasticsearch document. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot-elasticsearch-plugin#readme&#34;&gt;elasticsearch&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;settingSearchIndex&amp;quot;: {
    &amp;quot;options&amp;quot;: {
      &amp;quot;docName&amp;quot;: &amp;quot;cat&amp;quot;,
      &amp;quot;tags&amp;quot;: [
        &amp;quot;pet&amp;quot;,
        &amp;quot;cat&amp;quot;
      ],
      &amp;quot;keyPaths&amp;quot;: {
        &amp;quot;name&amp;quot;: &amp;quot;catDocFromParams.name&amp;quot;
      },
      &amp;quot;title&amp;quot;: {
        &amp;quot;$sprintf&amp;quot;: {
          &amp;quot;template&amp;quot;: &amp;quot;%s (%s)&amp;quot;,
          &amp;quot;inputPaths&amp;quot;: [
            &amp;quot;catDocFromParams.name&amp;quot;,
            &amp;quot;catDocFromParams.size&amp;quot;
          ]
        }
      },
      &amp;quot;summary&amp;quot;: {
        &amp;quot;$value&amp;quot;: {
          &amp;quot;path&amp;quot;: &amp;quot;catDocFromParams.comment&amp;quot;
        }
      },
      &amp;quot;launches&amp;quot;: [
        {
          &amp;quot;title&amp;quot;: &amp;quot;Edit&amp;quot;,
          &amp;quot;flowId&amp;quot;: &amp;quot;catEditingFlow&amp;quot;
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;docName&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Used to calculate the name of an Elasticsearch type where the document should be indexed (type names are derived as [namespace]_[docName]).&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;keyPaths&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;object&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Used to derive the id of the document to delete. Provide key/value pairs&amp;hellip; the key will be ignored (for now), but the value should be a &amp;#39;.&amp;#39; delimited path pointing to a value on the Flobot context. These context-values will be joined with &amp;#39;_&amp;#39; to form a unique identifier for the document.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;title&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A short label to identify a document - a good candidate for using a &lt;strong&gt;command&lt;/strong&gt; (e.g. &lt;code&gt;$value&lt;/code&gt;, &lt;code&gt;$sprintf&lt;/code&gt;) to assemble some dynamic content from the Flobot context.&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;summary&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Provide a brief summary of the document being indexed (again consider use of &lt;code&gt;$value&lt;/code&gt;, &lt;code&gt;sprintf&lt;/code&gt; commands for dynamic content).&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;launches&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;array&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;In the case where a user has searched and found the document that&amp;#39;s to be indexed, chances are they&amp;#39;ll want to perform an action on it (view, edit etc.) Each of the possible actions are termed a &lt;em&gt;launch&lt;/em&gt;&amp;#39;. Launches are simple objects that contain the &lt;code&gt;title&lt;/code&gt; of the action (e.g. &lt;em&gt;Edit&lt;/em&gt; or &lt;em&gt;View&lt;/em&gt; - but can be anything) and a &lt;code&gt;flowId&lt;/code&gt; of any flow that can perform that action.&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This state will automatically advance the flow and doesn&amp;rsquo;t require any external updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>starting state</title>
      <link>https://wmfs.github.io/core-components/states/flobot-starting/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/states/flobot-starting/</guid>
      <description>

&lt;p&gt;An internal (automatically added) state that performs some Flobot-startup tasks. This state is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt;flobot&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;state-config&#34;&gt;State config&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;This state doesn&amp;rsquo;t require any configuration.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;autoNudge&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This state will automatically advance the flow and doesn&amp;rsquo;t require any external updates&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>env command</title>
      <link>https://wmfs.github.io/core-components/commands/flobot-env/</link>
      <pubDate>Fri, 20 Jan 2017 23:18:04 +0000</pubDate>
      
      <guid>https://wmfs.github.io/core-components/commands/flobot-env/</guid>
      <description>

&lt;p&gt;Allows a state to refer to an environment variable. This command is provided via the
&lt;a href=&#34;https://github.com/wmfs/flobot#readme&#34;&gt;flobot&lt;/a&gt; plugin  and isn&amp;#39;t offered by any of the other core plugins.&lt;/p&gt;

&lt;h2 id=&#34;command-config&#34;&gt;Command config&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;sendingEmail&amp;quot;: {
    &amp;quot;options&amp;quot;: {
      &amp;quot;to&amp;quot;: {
        &amp;quot;$env&amp;quot;: {
          &amp;quot;variableName&amp;quot;: &amp;quot;FLOBOT_WELCOME_RECIPIENTS&amp;quot;,
          &amp;quot;failIfNotSet&amp;quot;: true
        }
      },
      &amp;quot;subject&amp;quot;: &amp;quot;Welcome to Flobot!&amp;quot;,
      &amp;quot;text&amp;quot;: &amp;quot;Congratulations... you are now part of the wonderful world of Flobot! &amp;lt;3&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;variableName&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Name of an environment variable to read a value from&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;em&gt;failIfNotSet&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Should things fail if the environment variable hasn&amp;#39;t been set? Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;hr&gt;

&lt;h2 id=&#34;related&#34;&gt;Related&lt;/h2&gt;
</description>
    </item>
    
  </channel>
</rss>